// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QRCodeMenu.Server.Data;

#nullable disable

namespace QRCodeMenu.Server.Data.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20220620171456_NullableGroup")]
    partial class NullableGroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DishIngredient", b =>
                {
                    b.Property<int>("DishesId")
                        .HasColumnType("integer");

                    b.Property<int>("IngredientsId")
                        .HasColumnType("integer");

                    b.HasKey("DishesId", "IngredientsId");

                    b.HasIndex("IngredientsId");

                    b.ToTable("DishIngredient");
                });

            modelBuilder.Entity("DishMenu", b =>
                {
                    b.Property<int>("DishesId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecialMenusId")
                        .HasColumnType("integer");

                    b.HasKey("DishesId", "SpecialMenusId");

                    b.HasIndex("SpecialMenusId");

                    b.ToTable("DishMenu");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Affiliate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("IndividualMenuId")
                        .HasColumnType("integer");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IndividualMenuId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Affiliate");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.AffiliateAddress", b =>
                {
                    b.Property<int>("AffiliateId")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AffiliateId");

                    b.ToTable("AffiliateAddress");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.DishesGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("DishesGroups");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("integer");

                    b.Property<string>("SubName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("DishIngredient", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QRCodeMenu.Server.Data.Entities.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DishMenu", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Dish", null)
                        .WithMany()
                        .HasForeignKey("DishesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QRCodeMenu.Server.Data.Entities.Menu", null)
                        .WithMany()
                        .HasForeignKey("SpecialMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Affiliate", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Menu", "IndividualMenu")
                        .WithMany()
                        .HasForeignKey("IndividualMenuId");

                    b.HasOne("QRCodeMenu.Server.Data.Entities.Restaurant", "Restaurant")
                        .WithMany("Affiliates")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualMenu");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.AffiliateAddress", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Affiliate", "Affiliate")
                        .WithOne("Address")
                        .HasForeignKey("QRCodeMenu.Server.Data.Entities.AffiliateAddress", "AffiliateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Affiliate");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Dish", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.DishesGroup", "Group")
                        .WithMany("Dishes")
                        .HasForeignKey("GroupId");

                    b.HasOne("QRCodeMenu.Server.Data.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.DishesGroup", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Ingredient", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Menu", b =>
                {
                    b.HasOne("QRCodeMenu.Server.Data.Entities.Restaurant", "Restaurant")
                        .WithMany("Menus")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Affiliate", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.DishesGroup", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("QRCodeMenu.Server.Data.Entities.Restaurant", b =>
                {
                    b.Navigation("Affiliates");

                    b.Navigation("Menus");
                });
#pragma warning restore 612, 618
        }
    }
}
